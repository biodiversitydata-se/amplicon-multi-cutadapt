# this container defines the underlying OS for each job when using the workflow
# with --use-conda --use-singularity
singularity: "docker://continuumio/miniconda3:4.9.2"

configfile: "config/config.yaml"

def fastq_files(data_dir, sample, i):
    # Open the .lst file for the sample
    with open("{}/{}.lst".format(data_dir, sample), 'r') as fh:
        files = []
        for line in fh:
            if f"_R{i}_" in line:
                files.append("{}/{}".format(data_dir, line.rstrip()))
    return " ".join(sorted(files))

rule concat_samples:
    """This rule concatenates sample fastq files from multiple lanes"""
    output:
        "data/{sample}_R{i}.fastq.gz"
    params:
        tmp="$TMPDIR/{sample}_R{i}.fastq.gz",
        files=lambda wildcards: fastq_files(config["paths"]["raw_data_dir"], wildcards.sample, wildcards.i),
    shell:
        """
        cat {params.files} > {params.tmp}
        mv {params.tmp} {output[0]}
        """

rule cutadapt:
    input:
        "data/{sample}_R1.fastq.gz",
        "data/{sample}_R2.fastq.gz"
    output:
        "results/cutadapt/{sample}_R1.cutadapt.fastq.gz",
        "results/cutadapt/{sample}_R2.cutadapt.fastq.gz"
    log: "logs/cutadapt/{sample}.log"
    threads: config["cutadapt"]["threads"]
    params:
        f=" ".join(["-a {}".format(x) for x in config["primers"]["forward"]]),
        r=" ".join(["-A {}".format(x) for x in config["primers"]["reverse"]])
    shell:
        """
        cutadapt -t {threads} {params.f} {params.r} -o {output[0]} -p {output[1]} {input[0]} {input[1]} > {log} 2>&1
        """
